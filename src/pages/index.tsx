import React, { useState } from "react";
import Head from "next/head";

import styles from "@/styles/Home.module.css";


export default function Home () {

  const keys = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
  const operators = ['+', '-', '×', '÷'];

  // Les éléments affiché sur l'écran
  const [screenValue, setScreenValue] = useState<string>('');

  // Les valeurs d'entrée
  const [entryValue, setEntryValue] = useState<string>('');

  // Dernier résultat obtenu
  const [lastResult, setLastResult] = useState<string>('');

  // Ajoute chaque nouvel élément sur l'écran
  const handleScreen = (elem:string) => {
    let calcul = null;
    operators.includes(elem) ? (
      console.log("Wsh un opérateurs !!", elem),
      console.log(lastResult,screenValue),
      calcul = lastResult+screenValue,
      calcul = calcul.replace("×", "*"),
      calcul = calcul.replace("÷", "/"),
      console.log(calcul),
      setLastResult(eval(calcul)),
      setScreenValue(elem)
    ) :
    setScreenValue(value => value && value != '0' ? value+elem : elem)

  }

  const percentage = () => {

  }

  // Effectue le calcul des éléments de l'écran
  const displayResult = () => {
    try {
      // Variable qui va contenir le résultat
      let result: string = '';

      const value: string  = lastResult + screenValue; 

      // Boucle sur tous les éléments de l'écran
      for (let i=0; i<value.length; i++){
        switch (value[i]) {
          case '×':
            result += '*';
            break;
          case '÷':
            result += '/';
            break;
          case ',':
            result += '.';
            break;
          case '%':
            let j = i - 1
            let oldValue = '';
            while (!operators.includes(value[j])){
              console.log(value[j])
              oldValue = value[j] + oldValue;
              j--
            }
            result = result.slice(0,j)
            if (value[j] == '×'){
              console.log('Multiplication')
              result += `*(${oldValue}/100)`
            } else if (value[j] == '÷') {
              console.log('Division')
              result += `/(${oldValue}/100)`
            } else if (value[j] == '+'){
              console.log('Addition')
              result += `*(1 + 0.${oldValue})`;
            } else if (value[j] == '-'){
              console.log('Soustraction')
              result += `*(1 - 0.${oldValue})`;
            } 

            break;
          default:
            result += value[i]
        }
      }
      console.log(result)
      setScreenValue(eval(result))
      setLastResult('')
    }
    catch(e){
      if (e instanceof SyntaxError)
      console.log('Erreur de syntaxe')
    }
  }

 
  return (
    <>
      <Head>
        <title>Calculator App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.screen}>{screenValue}</div>
        <div className="boutons">
          {keys.map(k=> (
            <button 
              key={k}
              className={styles.buttons} 
              type="button" 
              onClick={() => handleScreen(String(k))}>
                {k}
              </button>
          ))}
        </div>
        <div>
          <button 
            className={styles.buttons} 
            type="button"
            onClick={() => handleScreen('+')}>
              +
          </button>
          <button 
            className={styles.buttons} 
            type="button"
            onClick={() => handleScreen('-')}>
              -
          </button>
          <button 
            className={styles.buttons} 
            type="button"
            onClick={() => handleScreen('×')}>
              &times;
          </button>
          <button
          className={styles.buttons}  
            type="button"
            onClick={() => handleScreen('÷')}>
              ÷
          </button>
          <button
          className={styles.buttons} 
            type="button"
            onClick={() => handleScreen('%')}>
              %
          </button>
          <button
          className={styles.buttons} 
            type="button"
            onClick={() => handleScreen(',')}>
              ,
          </button>
          <button 
            className={styles.buttons} 
            type="button"
            onClick={() => displayResult()}>
              =
          </button>
          <button 
            className={styles.buttons} 
            type="button"
            onClick={() => {setScreenValue('0'), setLastResult('')}}>
              AC
          </button>
        </div>
        <h1>ANS : {lastResult}</h1>
      </main>
    </>
  );
}
